plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'

	id "org.sonarqube" version "4.2.0.3129"
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	runtimeOnly 'com.mysql:mysql-connector-j'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	// 시큐리티 디펜던시 추가
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// aws S3
	implementation 'com.amazonaws:aws-java-sdk-lambda:1.12.641'
	implementation 'com.amazonaws:aws-java-sdk-core:1.12.641'
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.641'
	implementation 'com.amazonaws:jmespath-java:1.12.641'

	//DB
	runtimeOnly 'com.mysql:mysql-connector-j'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// cache
	implementation 'org.springframework.boot:spring-boot-starter-cache'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// MapStruct
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

//	runtimeOnly 'com.h2database:h2'
	implementation 'com.google.code.gson:gson:2.8.7'

}

tasks.named('test') {
	useJUnitPlatform()
}

sonarqube {
    properties {
		property "sonar.host.url", "https://sonarqube.ssafy.com/"
        property "sonar.projectKey", "flowermari"

        property "sonar.java.binaries", "${buildDir}/classes/java/main"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.sources", "src/main/java"
        // property "sonar.exclusions", "**/util/**, **/support/**, **/dto/**"

        property "sonar.tests", "src/test/java"
        property "sonar.test.inclusions", "**/*Test.java"
        property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    }
}
